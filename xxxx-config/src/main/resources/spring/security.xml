<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd">
    <http pattern="/img/**" security="none" />
    <http pattern="/**/images/**" security="none" />
    <http pattern="/jquery/**" security="none" />
    <http pattern="/**/**.css" security="none" />
    <http pattern="/**/**.js" security="none" />
    <http pattern="/i18njs" security="none" />
    <http pattern="/captcha.png*" security="none" />
    <http pattern="/app/error/message*" security="none" />
    <http pattern="/page/login*" security="none" />
    <http auto-config="false" access-decision-manager-ref="accessDecisionManager" entry-point-ref="capAuthenticationEntryPoint" use-expressions="false" disable-url-rewriting="false">
        <headers disabled="true" />
        <csrf disabled="true" />
        <access-denied-handler error-page="/page/login?error" />
        <intercept-url pattern="/page/home/*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/page/index" access="IS_AUTHENTICATED_FULLY" />
        <intercept-url pattern="/page/common/*" access="IS_AUTHENTICATED_FULLY" />
        <!-- cap-auth-admin start -->
        <intercept-url pattern="/page/**" access="${systemType}" />
        <!-- cap-auth-admin end -->
        <!-- without cap-auth-admin start -->
        <!-- <intercept-url pattern="/page/**" access="IS_AUTHENTICATED_FULLY" /> -->
        <!-- without cap-auth-admin end -->
        <intercept-url pattern="/**" access="IS_AUTHENTICATED_FULLY" />
        <anonymous enabled="false" />
        <!-- cap-auth-admin start -->
        <form-login always-use-default-target="true" login-page="/page/login" default-target-url="/page/index" authentication-failure-handler-ref="ajaxAuthenticationFailureHandler"
            username-parameter="j_username" password-parameter="j_password" login-processing-url="/j_spring_security_check" />
        <!-- cap-auth-admin end -->
        <!-- without cap-auth-admin start -->
        <!-- <form-login always-use-default-target="true" login-page="/page/login" default-target-url="/page/index" username-parameter="j_username" password-parameter="j_password" login-processing-url="/j_spring_security_check" 
            /> -->
        <!-- without cap-auth-admin end -->
        <session-management>
            <concurrency-control max-sessions="1" expired-url="/page/login?error" session-registry-alias="sessionRegistry" /> <!-- exception-if-maximum-exceeded="true" -->
        </session-management>
        <logout logout-url="/j_spring_security_logout" logout-success-url="/page/login" />
        <!-- cap-captcha start -->
        <custom-filter ref="captchaCaptureFilter" before="FORM_LOGIN_FILTER" />
        <!-- cap-captcha end -->
    </http>
    <!-- cap-captcha start -->
    <beans:bean id="captchaCaptureFilter" class="com.iisigroup.cap.security.captcha.filter.CaptchaCaptureFilter"></beans:bean>
    <!-- cap-captcha end -->
    <!-- cap-auth-admin start -->
    <beans:bean id="userDetailsServiceImpl" class="com.iisigroup.xxxx.auth.service.impl.UserDetailsServiceImpl" />
    <beans:bean id="customAuthenticationProvider" class="com.iisigroup.xxxx.auth.provider.CapAuthenticationProvider" p:captchaCaptureFilter-ref="captchaCaptureFilter" p:userService-ref="userDetailsServiceImpl"
        p:passwordService-ref="passwordService" p:accessControlService-ref="accessControlService" />
    <authentication-manager>
        <authentication-provider ref="customAuthenticationProvider" />
    </authentication-manager>
    <!-- cap-auth-admin end -->
    <!-- without cap-auth-admin start -->
    <!-- <beans:bean id="userDetailsServiceImpl" class="com.iisigroup.cap.security.service.impl.CapDefaultUserDetailsService" />
    <authentication-manager>
        <authentication-provider user-service-ref="userDetailsServiceImpl">
            <password-encoder hash="plaintext" />
        </authentication-provider>
    </authentication-manager> -->
    <!-- without cap-auth-admin end -->
    <beans:bean id="capAuthenticationEntryPoint" class="com.iisigroup.cap.security.web.CapAuthenticationEntryPoint">
        <beans:constructor-arg value="/page/login" />
        <beans:property name="forceHttps" value="false" />
    </beans:bean>
    <beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
        <beans:constructor-arg name="decisionVoters">
            <beans:list>
                <!-- cap-auth-admin start -->
                <beans:bean class="com.iisigroup.xxxx.auth.vote.CapPermissionVoter">
                    <beans:property name="rolePrefix" value="${systemType}" />
                    <beans:property name="securityService" ref="accessControlService" />
                    <beans:property name="stripQueryStringFromUrls" value="true" />
                </beans:bean>
                <!-- cap-auth-admin end -->
                <beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
            </beans:list>
        </beans:constructor-arg>
        <beans:property name="allowIfAllAbstainDecisions" value="false" />
    </beans:bean>
    <beans:bean id="loggerListener" class="org.springframework.security.access.event.LoggerListener" />
    <!-- Security context -->
    <beans:bean id="capSecurityContext" class="com.iisigroup.cap.security.CapSecurityContext" scope="session" />
</beans:beans>